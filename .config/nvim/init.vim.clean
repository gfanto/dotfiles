set shell=/bin/bash

set nocompatible
filetype plugin indent on
syntax on

set termguicolors
set noerrorbells
set lazyredraw

set path+=**
set wildmenu
set wildignore+=*.o,*~,*.pyc,__pycache__

set tabstop=4 softtabstop=4 shiftwidth=4
set autoindent
set expandtab
set smartindent
set smartcase
set showmatch
set nojoinspaces
set hidden

set relativenumber
set nu
set guicursor=
set signcolumn=no

set hlsearch
set incsearch
set inccommand=nosplit
set ignorecase

set nowrap
set noswapfile
set nobackup
set nowritebackup
set undodir=~/.config/nvim/undodir
set undofile

set mouse=a
set clipboard+=unnamedplus

set complete-=i
set completeopt=menuone,noinsert,noselect
set pumheight=12

set ve=block
set scrolloff=8
set sidescroll=0
set cmdheight=1
set updatetime=250
set notimeout
set ttimeout
set ttimeoutlen=10
set shortmess+=c

set foldmethod=syntax
set foldlevelstart=99

set diffopt+=iwhite
set diffopt+=algorithm:patience
set diffopt+=indent-heuristic

set laststatus=2
set statusline=%<%f\ %h%m%r%{FugitiveStatusline()}%=%-14.(%l,%c%V%)\ %P

if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

if executable('rg')
  set grepprg=rg\ --vimgrep
endif

let g:mapleader = "\<Space>"

let g:floaterm_autoclose = 2

let g:netrw_liststyle=3
let g:netrw_browse_split = 2
let g:netrw_winsize = 25

com! CopyRel let @+ = expand('%')
com! CopyAbs let @+ = expand('%:p')

packadd cfilter

call plug#begin('~/.config/nvim/plugged')

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-vinegar'
Plug 'michaeljsmith/vim-indent-object'

Plug 'mbbill/undotree'
Plug 'voldikss/vim-floaterm'

Plug 'sheerun/vim-polyglot'
Plug 'neovim/nvim-lspconfig'

call plug#end()

colorscheme fanto
hi FloatermBorder guifg=#a89984 guibg=none gui=none

fun CleverTab(dir)
    if strpart( getline('.'), 0, col('.')-1 ) =~ '^\s*$'
       return "\<Tab>"
    else
        if a:dir == 'j'
            return "\<C-N>"
        elseif a:dir == 'k'
            return "\<C-P>"
        endif
    endif
endfun
inoremap <Tab> <C-R>=CleverTab('j')<CR>
inoremap <S-Tab> <C-R>=CleverTab('k')<CR>

tnoremap <Esc> <C-\><C-n>

if executable('fzf')
  nnoremap <C-p> :FloatermNew fzf<CR>
end

nnoremap <silent> Y y$
nnoremap <silent> S "_S
nnoremap <silent> x "_x
nnoremap <silent> s "_s
vnoremap <silent> X "_d

nnoremap k gk
nnoremap j gj
xnoremap < <gv
xnoremap > >gv
vnoremap $ $h

nnoremap <leader>u :UndotreeToggle<BAR>wincmd p<CR>
nnoremap <leader>e :Sex! <bar> :vertical resize 30<CR>
nnoremap <Leader>q :FloatermToggle<CR>
nnoremap <Leader>t :FloatermNew env fish<CR>

" *****************************************************************************
" autocmds
" *****************************************************************************

autocmd BufEnter * if (winnr("$") == 1 && &filetype == 'netrw') | q | endif
autocmd TermOpen * startinsert
autocmd TermClose * call nvim_input('<CR>')
autocmd TextYankPost * silent! lua require'vim.highlight'.on_yank({timeout = 120})
autocmd FileType python,yaml setl foldmethod=indent
autocmd FileType markdown,rst setl wrap textwidth=80 spell spelllang=it,en

" *****************************************************************************
" load system settings
" *****************************************************************************

let sys_config = expand('<sfile>:p:h').'/sys_init.vim'
if filereadable(sys_config)
  execute 'source '.sys_config
endif
